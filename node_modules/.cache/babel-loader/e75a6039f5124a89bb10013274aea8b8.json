{"ast":null,"code":"import _objectSpread from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Mustaqeem/noteful-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Mustaqeem/noteful-client/src/context/FoldersContext.js\";\nimport React, { Component, createContext } from 'react';\nimport conf from \"../config\";\nimport ErrorBoundary from '../components/ErrorBoundary';\nexport var FolderContext = createContext();\n\nvar FolderContextProvider = /*#__PURE__*/function (_Component) {\n  _inherits(FolderContextProvider, _Component);\n\n  function FolderContextProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FolderContextProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FolderContextProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      folders: [],\n      notes: [],\n      notename: \"\",\n      content: \"\",\n      folderSelected: \"\",\n      name: \"\"\n    };\n\n    _this.fetchCall = function (api, method, body) {\n      try {\n        if (!method && !body) {\n          //return GET request\n          return fetch(api);\n        } else if (method && !body) {\n          //DELETE request\n          return fetch(api, {\n            method: method\n          });\n        } else {\n          //POST\n          return fetch(api, {\n            method: method,\n            body: body,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (err) {\n        return err.message;\n      }\n    };\n\n    _this.getId = function () {\n      var res = _this.state.folders.find(function (it) {\n        return it.name === _this.state.folderSelected;\n      });\n\n      if (!res) {\n        alert(\"Please select a folder to add note to\");\n        return false;\n      }\n\n      return res.id;\n    };\n\n    _this.handleInput = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.addNote = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var note, notes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (_this.getId()) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 3:\n                note = JSON.stringify({\n                  \"name\": _this.state.notename,\n                  \"modified\": new Date(),\n                  \"folder_id\": _this.getId(),\n                  \"content\": _this.state.content\n                });\n                _context.next = 6;\n                return _this.fetchCall(conf.noteapi, 'POST', note);\n\n              case 6:\n                _context.next = 8;\n                return _context.sent.json();\n\n              case 8:\n                notes = _context.sent;\n\n                if (notes) {\n                  alert(\"Note added!\");\n                }\n\n                _this.getData();\n\n                window.location.replace(\"/\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.addFolder = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var folder, folders;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                folder = JSON.stringify({\n                  \"name\": _this.state.name\n                });\n                _context2.next = 4;\n                return _this.fetchCall(conf.folderapi, 'POST', folder);\n\n              case 4:\n                _context2.next = 6;\n                return _context2.sent.json();\n\n              case 6:\n                folders = _context2.sent;\n\n                if (folders) {\n                  alert(\"Folder Added!\");\n                }\n\n                _this.getData();\n\n                window.location.replace(\"/\");\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.removeNote = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n        var deleted;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.fetchCall(\"\".concat(conf.noteapi, \"/\").concat(id), 'DELETE');\n\n              case 2:\n                deleted = _context3.sent;\n\n                if (deleted) {\n                  alert('Note with id ' + id + \" was deleted\");\n                  window.location.replace(\"/\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.selectedNote = function (id) {\n      return _this.state.notes.filter(function (n) {\n        return n.id === id;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FolderContextProvider, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var notes, folders;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.fetchCall(conf.noteapi);\n\n              case 3:\n                _context4.next = 5;\n                return _context4.sent.json();\n\n              case 5:\n                notes = _context4.sent;\n                _context4.next = 8;\n                return this.fetchCall(conf.folderapi);\n\n              case 8:\n                _context4.next = 10;\n                return _context4.sent.json();\n\n              case 10:\n                folders = _context4.sent;\n\n                if (notes) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                throw new Error(\"Crashed!\");\n\n              case 13:\n                this.setState({\n                  notes: notes,\n                  folders: folders\n                });\n                _context4.next = 19;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", _context4.t0.message);\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 16]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }() //Get data during page load\n\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.getData();\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FolderContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          handleInput: this.handleInput,\n          addNote: this.addNote,\n          addFolder: this.addFolder,\n          removeNote: this.removeNote,\n          selectedNote: this.selectedNote\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return FolderContextProvider;\n}(Component);\n\nexport default FolderContextProvider;","map":{"version":3,"sources":["/Users/Mustaqeem/noteful-client/src/context/FoldersContext.js"],"names":["React","Component","createContext","conf","ErrorBoundary","FolderContext","FolderContextProvider","state","folders","notes","notename","content","folderSelected","name","fetchCall","api","method","body","fetch","headers","err","message","getId","res","find","it","alert","id","handleInput","e","target","value","setState","addNote","preventDefault","note","JSON","stringify","Date","noteapi","json","getData","window","location","replace","addFolder","folder","folderapi","removeNote","deleted","selectedNote","filter","n","Error","props","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\nimport conf from \"../config\";\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nexport const FolderContext = createContext();\n\nclass FolderContextProvider extends Component {\n    state = { \n        folders:[],\n        notes:[],\n        notename: \"\",\n        content: \"\",\n        folderSelected: \"\",\n        name: \"\"\n     }\n\n     fetchCall = (api, method, body) => {\n         try\n         {\n             if(!method && !body)\n             {\n                 //return GET request\n                return fetch(api);\n             }\n\n            else if (method && !body)\n            {\n                //DELETE request\n                return fetch(api, {\n                    method: method\n                });\n            }\n           else\n           {\n            //POST\n            return fetch(api, {\n                method: method,\n                body: body,\n                headers: {'Content-Type': 'application/json'}\n            });\n           }\n         }\n         catch(err)\n        {\n          return err.message;\n        }\n    }\n\n    async getData(){\n        try{\n            let notes = await (await this.fetchCall(conf.noteapi)).json();\n            let folders = await (await this.fetchCall(conf.folderapi)).json();\n            if(!notes)\n            {\n                throw new Error(\"Crashed!\");\n            }\n            this.setState({\n              notes:notes,\n              folders: folders\n            });\n    }\n    catch(err)\n    {\n      return err.message;\n    }\n\n    }\n\n    //Get data during page load\n     async componentDidMount() {\n      this.getData();\n    } \n\n    getId = () => {\n        let res = this.state.folders.find(it=> it.name === this.state.folderSelected);\n        if(!res)\n        {\n            alert(\"Please select a folder to add note to\");\n            return false;\n        }\n        return res.id;\n     }\n    handleInput = (e) => {\n        const{name, value} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n   \n    addNote = async (e) => {\n        e.preventDefault();\n        if(!this.getId())\n        {\n            return false;\n        }\n        const note = JSON.stringify({\n            \"name\":this.state.notename,\n            \"modified\": new Date(),\n            \"folder_id\": this.getId(),\n            \"content\": this.state.content\n    }) \n\n        let notes = await (await this.fetchCall(conf.noteapi, 'POST', note )).json();\n        if(notes)\n        {\n            alert(\"Note added!\");\n        }\n        this.getData();\n        window.location.replace(\"/\");\n    };\n           \n    addFolder = async (e) => {\n        e.preventDefault();\n        const folder= JSON.stringify({\n            \"name\": this.state.name\n        });\n        let folders = await (await this.fetchCall(conf.folderapi, 'POST', folder )).json();\n\n        if(folders)\n        {\n            alert(\"Folder Added!\");\n        }\n        this.getData();\n        window.location.replace(\"/\");\n    }\n\n    removeNote = async (id) =>\n    {\n       let deleted = await this.fetchCall(`${conf.noteapi}/${id}`, 'DELETE');\n       if(deleted)\n       {  \n           alert('Note with id '+ id + \" was deleted\")\n           window.location.replace(\"/\");\n       }\n    }\n  \n    selectedNote = (id) => this.state.notes.filter(n => n.id === id);\n\n    render() { \n        return (\n            <ErrorBoundary>\n            <FolderContext.Provider value={{...this.state, handleInput: this.handleInput, \n            addNote: this.addNote, addFolder: this.addFolder, removeNote: this.removeNote,\n            selectedNote: this.selectedNote\n            }}>\n                {this.props.children}\n            </FolderContext.Provider>\n            </ErrorBoundary>\n          );\n    }\n}\n \nexport default FolderContextProvider;"]},"metadata":{},"sourceType":"module"}